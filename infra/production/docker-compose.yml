version: '3.5'
services:
    db:
        image: postgres:14.2
        restart: always
        environment:
            POSTGRES_DB: $DB_DATABASE
            POSTGRES_USER: $DB_USER
            POSTGRES_PASSWORD: $DB_PASSWORD
        volumes:
            - ./docker/db:/var/lib/postgresql/data
    redis:
        image: redis:6.2
        command: "redis-server --requirepass $${REDIS_PASSWORD} --save 60 1 --maxmemory 8G"
        environment:
            REDIS_PASSWORD: $REDIS_PASSWORD
        volumes:
            - ./docker/redis:/data
    backend:
        image: peersyst/${projectName}-backend:latest
        restart: always
        environment:
            CONFIG_ENV: production
            AWS_REGION: eu-west-1
            AWS_SECRET_ID: production/${projectName}
    http:
        image: peersyst/${projectName}-http:latest
        restart: always
        ports:
            - '80:80'
        environment:
            BACKEND_UPSTREAM: "server backend:3000;"
    watchtower:
        image: containrrr/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /root/.docker/config.json:/config.json
        command: --interval 30
